name: Jules Conflict Resolver
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  resolve-conflicts:
    if: >
      github.event.issue.pull_request &&
      github.event.comment.user.login == 'jules[bot]' &&
      contains(github.event.comment.body, 'resolve conflicts')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-resolve conflicts
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            console.log(`Attempting to resolve conflicts for PR #${pr.data.number}`);
            
            // Only auto-resolve for Jules bot PRs with low-risk label
            if (pr.data.user.login !== 'jules[bot]' || 
                !pr.data.labels.some(label => label.name === 'low-risk')) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '❌ Auto-conflict resolution only available for Jules bot low-risk PRs.'
              });
              return;
            }

      - name: Attempt rebase
        run: |
          git config user.name "jules[bot]"
          git config user.email "jules[bot]@users.noreply.github.com"
          
          # Fetch latest main
          git fetch origin main
          
          # Checkout PR branch
          git checkout ${{ github.event.pull_request.head.ref }}
          
          # Attempt rebase
          if git rebase origin/main; then
            echo "✅ Rebase successful"
            git push --force-with-lease origin ${{ github.event.pull_request.head.ref }}
          else
            echo "❌ Rebase failed - manual resolution needed"
            git rebase --abort
            exit 1
          fi

      - name: Comment on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '✅ **Conflicts resolved automatically** via rebase. PR is now ready for auto-merge!'
            });

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '❌ **Auto-conflict resolution failed**. Manual resolution required:\n\n' +
                    '```bash\n' +
                    'git checkout main\n' +
                    'git pull origin main\n' +
                    `git checkout ${{ github.event.pull_request.head.ref }}\n` +
                    'git rebase main\n' +
                    '# Resolve conflicts manually\n' +
                    'git add .\n' +
                    'git rebase --continue\n' +
                    'git push --force-with-lease\n' +
                    '```'
            });
