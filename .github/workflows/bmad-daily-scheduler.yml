name: BMAD Daily Story Scheduler

on:
  schedule:
    - cron: "0 9 * * 1-5"   # 09:00 UTC, Monday-Friday (weekdays only)
  workflow_dispatch:
    inputs:
      task_count:
        description: 'Number of BMAD tasks to create'
        required: false
        default: '3'
        type: string

permissions:
  contents: read
  issues: write

jobs:
  schedule-bmad-tasks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Load BMAD Task Queue
        id: load-tasks
        run: |
          python3 - << 'EOF'
          import csv
          import json
          import random
          
          # Load BMAD-specific tasks
          tasks = []
          try:
              with open('.github/bmad-jules-tasks.csv', 'r', encoding='utf-8') as f:
                  reader = csv.DictReader(f)
                  tasks = list(reader)
          except FileNotFoundError:
              print("BMAD tasks file not found, using default tasks")
              tasks = [
                  {
                      "title": "BMAD: Daily Health Check", 
                      "label": "jules,bmad,health-check",
                      "body": "Perform daily health check on BMAD stories and documentation. Review story status and identify blocked items."
                  }
              ]
          
          # Determine how many tasks to create
          task_count = int('${{ github.event.inputs.task_count }}' or '3')
          selected_tasks = random.sample(tasks, min(task_count, len(tasks)))
          
          print(f"Selected {len(selected_tasks)} BMAD tasks for execution")
          print("bmad_tasks=" + json.dumps(selected_tasks))
          EOF

      - name: Create BMAD Story Issues
        uses: actions/github-script@v7
        with:
          script: |
            const tasks = ${{ steps.load-tasks.outputs.bmad_tasks }};
            const delay = ms => new Promise(r => setTimeout(r, ms));
            
            for (const task of tasks) {
              // Check if similar issue already exists (avoid duplicates)
              const existing = await github.paginate(github.rest.issues.listForRepo, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                labels: 'bmad'
              });
              
              const duplicate = existing.find(issue => 
                issue.title.includes(task.title.split(':')[1]?.trim() || task.title)
              );
              
              if (!duplicate) {
                console.log(`Creating BMAD task: ${task.title}`);
                
                const issueBody = `${task.body}

**Auto-Generated BMAD Task**
- Created by: Daily BMAD Scheduler
- Priority: Medium - Execute within 24 hours
- Type: Automated Story Development

**Automation Features:**
- [x] Auto-trigger Codex review after completion
- [ ] Create follow-up tasks if dependencies found
- [ ] Notify team when complete

---
*This is an automated BMAD workflow task. Jules will be tagged to execute the BMAD process.*`;

                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: task.title,
                  body: issueBody,
                  labels: task.label.split(',').map(l => l.trim())
                });
                
                await delay(2000); // Rate limiting
              } else {
                console.log(`Skipping duplicate task: ${task.title}`);
                
                // Add a comment to refresh existing task
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: duplicate.number,
                  body: "üîÑ Daily BMAD scheduler refresh - re-prioritizing this task."
                });
              }
            }

      - name: Update Task Statistics
        uses: actions/github-script@v7
        with:
          script: |
            // Get current BMAD task statistics
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'bmad',
              state: 'all'
            });
            
            const stats = {
              total: issues.length,
              open: issues.filter(i => i.state === 'open').length,
              completed: issues.filter(i => i.state === 'closed').length,
              in_progress: issues.filter(i => 
                i.state === 'open' && 
                i.comments > 0
              ).length
            };
            
            console.log('BMAD Task Statistics:', stats);
            
            // Create daily summary issue if it's Monday
            const today = new Date();
            if (today.getDay() === 1) { // Monday
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `BMAD Weekly Summary - Week of ${today.toISOString().split('T')[0]}`,
                body: `## BMAD Automation Weekly Summary

**Task Statistics:**
- üìù Total BMAD Tasks: ${stats.total}
- ‚è≥ Currently Open: ${stats.open}
- ‚úÖ Completed: ${stats.completed}
- üîÑ In Progress: ${stats.in_progress}

**This Week's Focus:**
- Continue story development automation
- Improve Jules + Codex integration
- Monitor task completion rates
- Optimize BMAD workflow efficiency

**Automation Health:**
- Jules Task Execution: Active
- Codex Review Integration: Active
- Daily Scheduling: Active

---
*Generated by BMAD Daily Scheduler*`,
                labels: ['bmad', 'summary', 'weekly']
              });
            }
